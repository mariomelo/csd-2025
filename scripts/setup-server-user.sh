#!/bin/bash

# Script para configurar o usu√°rio CSD no servidor
# Execute este script COMO ROOT no servidor

set -e

echo "üîß Configurando usu√°rio CSD para Continuous Delivery"
echo ""

# Criar usu√°rio csd se n√£o existir
if id "csd" &>/dev/null; then
    echo "‚úÖ Usu√°rio 'csd' j√° existe"
else
    echo "üìù Criando usu√°rio 'csd'..."
    useradd -m -s /bin/bash csd
    echo "‚úÖ Usu√°rio 'csd' criado"
fi

# Criar estrutura de diret√≥rios para os grupos
echo ""
echo "üìÅ Criando estrutura de diret√≥rios..."

GROUP_NAMES=("group0" "group1" "group2" "group3")
BASE_PORT=3000

for i in "${!GROUP_NAMES[@]}"; do
    GROUP="${GROUP_NAMES[$i]}"
    GROUP_DIR="/home/csd/$GROUP"

    echo "  - Criando diret√≥rio $GROUP..."

    # Criar diret√≥rio do grupo se n√£o existir
    mkdir -p "$GROUP_DIR"

    echo "‚úÖ $GROUP criado"
done

# Ajustar permiss√µes
echo ""
echo "üîê Ajustando permiss√µes..."
chown -R csd:csd /home/csd
chmod 755 /home/csd

for GROUP in "${GROUP_NAMES[@]}"; do
    if [ -d "/home/csd/$GROUP" ]; then
        chmod -R 755 "/home/csd/$GROUP"
    fi
done

echo ""
echo "‚úÖ Configura√ß√£o conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Clonar reposit√≥rio hangman-web para cada grupo:"
echo "   sudo ./clone-hangman-web.sh"
echo ""
echo "2. Gerar chave SSH para o usu√°rio csd:"
echo "   sudo -u csd ssh-keygen -t ed25519 -C 'csd@deploy' -f /home/csd/.ssh/id_ed25519 -N ''"
echo ""
echo "3. Adicionar a chave PRIVADA aos GitHub Secrets (SSH_PRIVATE_KEY):"
echo "   sudo cat /home/csd/.ssh/id_ed25519"
echo ""
echo "4. Configurar os servi√ßos systemd para cada grupo:"
echo "   sudo ./setup-systemd-services.sh"
echo ""
echo "üìä Diret√≥rios criados:"
for GROUP in "${GROUP_NAMES[@]}"; do
    echo "  - /home/csd/$GROUP"
done
